program MuseumVisitorManagement;

uses crt;

type
    TVisitor = record
        Name: string; // Menggunakan string tanpa batasan panjang
        Age: Integer;
        VisitDate: string[10]; // Format: DD-MM-YYYY
    end;

var
    VisitorFile: file of TVisitor;
    Visitor: TVisitor;

procedure AddVisitor;
begin
    AssignFile(VisitorFile, 'visitors.dat');
    {$I-}
    Append(VisitorFile);
    if IOResult <> 0 then
        Rewrite(VisitorFile);
    {$I+}
    
    WriteLn('Enter Visitor Name: ');
    ReadLn(Visitor.Name);
    WriteLn('Enter Visitor Age: ');
    ReadLn(Visitor.Age);
    WriteLn('Enter Visit Date (DD-MM-YYYY): ');
    ReadLn(Visitor.VisitDate);
    
    Write(VisitorFile, Visitor);
    CloseFile(VisitorFile);
    WriteLn('Visitor added successfully.');
end;

procedure DisplayVisitors;
begin
    AssignFile(VisitorFile, 'visitors.dat');
    {$I-}
    Reset(VisitorFile);
    if IOResult <> 0 then
    begin
        WriteLn('Error opening file.');
        Exit;
    end;
    {$I+}
    
    WriteLn('List of Visitors:');
    while not Eof(VisitorFile) do
    begin
        Read(VisitorFile, Visitor);
        WriteLn('Name: ', Visitor.Name, ', Age: ', Visitor.Age, ', Visit Date: ', Visitor.VisitDate);
    end;
    
    CloseFile(VisitorFile);
end;

function SearchVisitor(Name: string): Boolean;
var
    Found: Boolean;
begin
    Found := False;
    AssignFile(VisitorFile, 'visitors.dat');
    {$I-}
    Reset(VisitorFile);
    if IOResult <> 0 then
    begin
        WriteLn('Error opening file.');
        Exit;
    end;
    {$I+}
    
    while not Eof(VisitorFile) do
    begin
        Read(VisitorFile, Visitor);
        if Visitor.Name = Name then
        begin
            WriteLn('Visitor found: Name: ', Visitor.Name, ', Age: ', Visitor.Age, ', Visit Date: ', Visitor.VisitDate);
            Found := True;
            Break;
        end;
    end;
    
    CloseFile(VisitorFile);
    SearchVisitor := Found;
end;

procedure SearchVisitorRecursive(Name: string);
var
    VisitorFound: Boolean;

    procedure RecursiveSearch(var Index: Integer);
    begin
        if Index < FileSize(VisitorFile) then
        begin
            Seek(VisitorFile, Index);
            Read(VisitorFile, Visitor);
            if Visitor.Name = Name then
            begin
                WriteLn('Visitor found: Name: ', Visitor.Name, ', Age: ', Visitor.Age, ', Visit Date: ', Visitor.VisitDate);
                VisitorFound := True; // Tandai bahwa pengunjung ditemukan
            end
            else
            begin
                Inc(Index);
                RecursiveSearch(Index);
            end;
        end;
    end;

begin
    AssignFile(VisitorFile, 'visitors.dat');
    {$I-}
    Reset(VisitorFile);
    if IOResult <> 0 then
    begin
        WriteLn('Error opening file.');
        Exit;
    end;
    {$I+}
    
    VisitorFound := False;
    RecursiveSearch(0);
    CloseFile(VisitorFile);
    
    if not VisitorFound then
        WriteLn('Visitor not found.');
end;

var
    Choice: Integer;
    SearchName: string;

begin
    repeat
        WriteLn('Museum Visitor Management System');
        WriteLn('1. Add Visitor');
        WriteLn('2. Display Visitors');
        WriteLn('3. Search Visitor');
        WriteLn('4. Exit');
        Write('Choose an option: ');
        ReadLn(Choice);
        
        case Choice of
            1: AddVisitor;
            2: DisplayVisitors;
            3: 
                begin
                    WriteLn('Enter name to search: ');
                    ReadLn(SearchName);
                    SearchVisitorRecursive(SearchName);
                end;
            4: WriteLn('Exiting...');
            else WriteLn('Invalid choice. Please try again.');
        end;
        
        WriteLn;
    until Choice = 4;
end.
